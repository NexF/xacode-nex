{
  "name": "xacode-nex",
  "displayName": "xacode_nex",
  "description": "",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.79.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": ["*"],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "xacode-nex.helloWorld",
        "title": "Hello World"
      }
    ],
    "keybindings": [
      {
        "key": "tab",
        "command": "tabnine.accept-inline-suggestion",
        "when": "tabnine.in-inline-suggestions"
      }
    ], 
    "configuration": [
      {
        "title": "xacode-nex",
        "properties": {
          "XaCode.modelIdOrEndpoint": {
            "type": "string",
            "default": "http://9.134.117.59:8000/api/generate/",
            "description": "Supply huggingface model id (ex: `bigcode/starcoder`) or custom endpoint (ex: https://bigcode-large-xl.eu.ngrok.io/generate) to which request will be sent to. When huggingface model id is supplied, hugging face API inference will be used."
          },
          "XaCode.isFillMode": {
            "type": "boolean",
            "default": true,
            "description": "Whether to send to inference server: codes that are on top of cursor only (isFillMode=false) OR codes that are both above & below the cursor (isFillMode=true)"
          },
          "XaCode.startToken": {
            "type": "string",
            "default": "<fim_prefix>",
            "description": "String that is sent to server is in format: {startToken}{code above cursor}{middleToken}{code below cursor if isFillMode=true}{endToken}. Leave startToken, middleToken, or endToken empty if there is no special token for those placements."
          },
          "XaCode.middleToken": {
            "type": "string",
            "default": "<fim_middle>",
            "description": "String that is sent to server is in format: {startToken}{code above cursor}{middleToken}{code below cursor if isFillMode=true}{endToken}. Leave startToken, middleToken, or endToken empty if there is no special token for those placements."
          },
          "XaCode.endToken": {
            "type": "string",
            "default": "<fim_suffix>",
            "description": "String that is sent to server is in format: {startToken}{code above cursor}{middleToken}{code below cursor if isFillMode=true}{endToken}. Leave startToken, middleToken, or endToken empty if there is no special token for those placements."
          },
          "XaCode.temperature": {
            "type": "float",
            "default": 0.2,
            "description": "Sampling temperature"
          },
          "XaCode.stopToken": {
            "type": "string",
            "default": "<|endoftext|>",
            "description": "(Optional) Stop token"
          },
          "XaCode.attributionWindowSize": {
            "type": "integer",
            "default": 250,
            "description": "Number of characters to scan for code attribution"
          }
        }
      }
    ]
  },
  "scripts": {
    "analyze:bundle": "webpack --env analyzeBundle",
    "vscode:prepublish": "yarn --frozen-lockfile && yarn clear-out && webpack --mode production",
    "compile": "webpack --mode development --watch",
    "build": "webpack --mode development",
    "test:copyassets": "ncp ./src/test/fixture ./out/test/fixture/",
    "prettier": "prettier --write src/",
    "prettier:check": "prettier --check src/",
    "lint": "eslint . --max-warnings 0",
    "lint:fix": "eslint . --fix",
    "test:prepare": "yarn clear-out && tsc && yarn test:copyassets",
    "test": "yarn test:prepare && node ./out/test/runTest.js",
    "vsce:package": "vsce package",
    "vsce:publish": "vsce publish",
    "ovsx:publish": "ovsx publish",
    "teamcity:test": "tsc && node ./out/test/runTest.js",
    "clear-out": "rimraf ./out"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "20.2.5",
    "@types/node-fetch": "^2.6.4",
    "@types/vscode": "^1.79.0",
    "@typescript-eslint/eslint-plugin": "^5.59.8",
    "@typescript-eslint/parser": "^5.59.8",
    "@vscode/test-electron": "^2.3.2",
    "add": "^2.0.6",
    "eslint": "^8.41.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "ts-loader": "^9.4.3",
    "typescript": "^5.1.3",
    "webpack": "^5.85.0",
    "webpack-cli": "^5.1.1",
    "yarn": "^1.22.19"
  },
  "dependencies": {
    "node-fetch": "^3.3.1"
  }
}
